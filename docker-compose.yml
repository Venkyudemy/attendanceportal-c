version: '3.8'

services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
      args:
        ENABLE_SSL: "false"
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=/api
      - REACT_APP_UPLOADS_URL=/uploads
      - TZ=Asia/Kolkata
    restart: unless-stopped
    networks:
      - attendance-network
    volumes:
      - uploads_data:/usr/share/nginx/html/uploads

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGO_URL=mongodb://mongo:27017/attendanceportal
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - TZ=Asia/Kolkata
      - MONGODB_URI=mongodb://mongo:27017/attendanceportal
      - WORKING_HOURS_START=09:00
      - WORKING_HOURS_END=17:45
      - LATE_THRESHOLD_MINUTES=15
      - MAX_FILE_SIZE=5242880
      - UPLOAD_PATH=/app/uploads
      - FRONTEND_ORIGIN=http://localhost:3000
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - attendance-network
    volumes:
      - ./Backend/scripts:/app/scripts:ro
      - uploads_data:/app/uploads
    command: >
      sh -c "
        echo '‚è≥ Waiting for MongoDB to be ready...' &&
        until nc -z mongo 27017; do
          sleep 2
          echo 'Still waiting for MongoDB...'
        done &&
        echo '‚úÖ MongoDB is ready!' &&
        echo 'üöÄ Starting backend server...' &&
        npm start
      "

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - mongo_data:/data/db
      - ./Backend/scripts:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - attendance-network
    command: mongod --bind_ip_all

volumes:
  mongo_data:
    driver: local
  uploads_data:
    driver: local

networks:
  attendance-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
