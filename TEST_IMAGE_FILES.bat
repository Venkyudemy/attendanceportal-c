@echo off
echo ========================================
echo üîç TESTING IMAGE FILES
echo ========================================
echo Checking if image files actually exist on disk...

echo.
echo üìã Step 1: Starting backend...
docker compose up -d backend
timeout /t 15 /nobreak

echo.
echo üìã Step 2: Testing image files for employee balaji...
docker compose exec backend node -e "
const mongoose = require('mongoose');
const Employee = require('./models/Employee');
const fs = require('fs');
const path = require('path');

mongoose.connect(process.env.MONGODB_URI || 'mongodb://mongo:27017/attendanceportal')
  .then(async () => {
    console.log('üîç TESTING IMAGE FILES FOR BALAJI...');
    
    // Find employee balaji
    const emp = await Employee.findOne({ name: 'balaji' });
    if (!emp) {
      console.log('‚ùå Employee balaji not found');
      process.exit(1);
    }
    
    console.log('üë§ Found employee:', emp.name);
    console.log('üÜî Employee ID:', emp._id.toString());
    
    // Check attendance data
    if (emp.attendance?.today) {
      const today = emp.attendance.today;
      console.log('\nüìä Attendance data:');
      console.log('  üïê Check-in time:', today.checkIn);
      console.log('  üïê Check-out time:', today.checkOut);
      console.log('  üì∏ Check-in image path:', today.checkInImage);
      console.log('  üì∏ Check-out image path:', today.checkOutImage);
      
      // Check if check-in image file exists
      if (today.checkInImage) {
        const fullPath = path.join('/app', today.checkInImage);
        console.log('\nüîç CHECKING CHECK-IN IMAGE:');
        console.log('  üìÅ Database path:', today.checkInImage);
        console.log('  üìÅ Full disk path:', fullPath);
        console.log('  ‚úÖ File exists:', fs.existsSync(fullPath));
        
        if (fs.existsSync(fullPath)) {
          const stats = fs.statSync(fullPath);
          console.log('  üìä File size:', stats.size, 'bytes');
          console.log('  üìÖ Last modified:', stats.mtime);
          console.log('  üéØ IMAGE FILE EXISTS - SHOULD DISPLAY!');
        } else {
          console.log('  ‚ùå IMAGE FILE NOT FOUND - THIS IS THE PROBLEM!');
          
          // Check what files are actually in the directory
          const empId = emp._id.toString();
          const empDir = path.join('/app/uploads/employees', empId);
          console.log('\nüîç CHECKING EMPLOYEE DIRECTORY:');
          console.log('  üìÅ Directory:', empDir);
          console.log('  ‚úÖ Directory exists:', fs.existsSync(empDir));
          
          if (fs.existsSync(empDir)) {
            const files = fs.readdirSync(empDir);
            console.log('  üìÅ Files in directory:', files);
            
            const imageFiles = files.filter(file => 
              file.toLowerCase().endsWith('.jpg') || file.toLowerCase().endsWith('.jpeg')
            );
            console.log('  üì∏ Image files:', imageFiles);
            
            if (imageFiles.length > 0) {
              console.log('  üéØ FOUND IMAGE FILES - NEED TO UPDATE DATABASE PATH!');
              console.log('  üí° Correct path should be: /uploads/employees/' + empId + '/' + imageFiles[0]);
            } else {
              console.log('  ‚ùå NO IMAGE FILES FOUND - IMAGES NOT SAVED PROPERLY');
            }
          } else {
            console.log('  ‚ùå EMPLOYEE DIRECTORY DOES NOT EXIST');
          }
        }
      }
    }
    
    console.log('\n‚úÖ IMAGE FILE TEST COMPLETE!');
    process.exit(0);
  })
  .catch(err => {
    console.error('‚ùå Test error:', err);
    process.exit(1);
  });
"

echo.
echo ========================================
echo üîç IMAGE FILE TEST COMPLETE!
echo ========================================
echo.
echo üí° Look at the output above to see:
echo 1. Does the image file actually exist on disk?
echo 2. Does the database path match the actual file location?
echo 3. If not, what's the correct path?
echo.
pause
